from telethon import events
import asyncio
import os
import random
from BANNED_FILES.config import MORNING_IMAGE, MORNING_MUSIC  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º
from language_file.transcribation.MemberLanguage import get_user_language
from language_file.extras_command.morning import get_translation

def register_proces(client):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∞–≤—Ç–æ-–æ—Ç–≤–µ—Ç –Ω–∞ '–£—Ç—Ä–æPro' —Å —É—á—ë—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞."""

    @client.on(events.NewMessage(outgoing=True))  # –ë–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    async def auto_reply(event):
        if "–£—Ç—Ä–æPro" in event.message.text:  # –£–±–∏—Ä–∞–µ–º .lower(), —Ç–µ–ø–µ—Ä—å —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä
            await asyncio.sleep(1)

            # –ë–µ—Ä—ë–º ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            user_id = event.chat_id  # üëà **–ó–¥–µ—Å—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ**
            lang = get_user_language(user_id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

            # –°–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ" –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            morning_message = random.choice(get_translation("morning_messages", lang))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
            if not os.path.exists(MORNING_IMAGE):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º MORNING_IMAGE
                print(f"–û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ '{MORNING_IMAGE}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                await event.respond(morning_message)
                return

            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ
            images = [f for f in os.listdir(MORNING_IMAGE) if f.lower().endswith((".png", ".jpg", ".jpeg"))]
            if images:
                random_image = os.path.join(MORNING_IMAGE, random.choice(images))
                await event.client.send_file(event.chat_id, random_image, caption=morning_message)
            else:
                await event.respond(morning_message)
                print(f"–û—Ç–≤–µ—Ç –Ω–∞ '–£—Ç—Ä–æPro' –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ)")

            # –ó–∞–¥–µ—Ä–∂–∫–∞ 2 –º–∏–Ω—É—Ç—ã 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø–µ—Å–Ω–∏
            await asyncio.sleep(150)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å –º—É–∑—ã–∫–æ–π
            if not os.path.exists(MORNING_MUSIC):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º MORNING_MUSIC
                print(f"–û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ '{MORNING_MUSIC}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return

            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            songs = [f for f in os.listdir(MORNING_MUSIC) if f.lower().endswith((".mp3", ".wav", ".ogg"))]
            if songs:
                random_song = os.path.join(MORNING_MUSIC, random.choice(songs))
                song_comment = random.choice(get_translation("song_comments", lang))  # –°–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await event.client.send_file(event.chat_id, random_song, caption=song_comment)
            else:
                print("–û—à–∏–±–∫–∞: –í –ø–∞–ø–∫–µ —Å –º—É–∑—ã–∫–æ–π –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤!")
