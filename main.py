import os
import asyncio
from telethon import TelegramClient, events
from commands.handler import handle_command # –ò–º–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥
from Ignore.config import phone_number, api_hash, api_id # –ò–º–ø–æ—Ä—Ç –∫–æ–º—Ñ–∏–≥
from commands.pro_command.delete import register_auto_delete # –ò–º–ø–æ—Ä—Ç –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏—è
from commands.auto_loader import load_auto_responses  # –ò–º–ø–æ—Ä—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
FILE_NAME = "Ignore/Auto_users.txt"

# –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É
VIDEO_FILE = "–í–∏–¥–µ–æ_–º–∞—Ç–µ—Ä–∏–∞–ª/MAIN.mp4"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient('session_name', api_id, api_hash)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏–µ
register_auto_delete(client)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã
auto_responses = load_auto_responses()

def load_replied_users():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    if not os.path.exists(FILE_NAME):
        return {}
    users = {}
    with open(FILE_NAME, "r", encoding="utf-8") as file:
        for line in file:
            parts = line.split(",")
            user_id = parts[0].split(":")[1].strip()
            users[user_id] = line.strip()
    return users

def save_replied_user(user_id, username, first_name, last_name, phone, chat_id, link):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    with open(FILE_NAME, "a", encoding="utf-8") as file:
        file.write(
            f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}"
            f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}"
            f"–ò–º—è: {first_name}"
            f"–§–∞–º–∏–ª–∏—è: {last_name}" 
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
            f"ID —á–∞—Ç–∞: {chat_id}"
            f"–°—Å—ã–ª–∫–∞: {link}\n"
        )

def remove_user_from_file(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞, –µ—Å–ª–∏ –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç !—Å—Ç–∞—Ä—Ç."""
    if not os.path.exists(FILE_NAME):
        return
    with open(FILE_NAME, "r", encoding="utf-8") as file:
        lines = file.readlines()
    with open(FILE_NAME, "w", encoding="utf-8") as file:
        for line in lines:
            if f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}" not in line:
                file.write(line)

@client.on(events.NewMessage(outgoing=True))
async def auto_reply_handler(event):
    """–†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã."""
    text = event.message.text.lower()

    for trigger, reply_func in auto_responses.items():
        if trigger in text:
            await reply_func(event)  # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞

@client.on(events.NewMessage(incoming=True))
async def handler(event):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    if not event.is_private:
        return

    sender = await event.get_sender()
    if sender is None:
        print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.")
        return

    user_id = str(sender.id)
    chat_id = event.chat_id
    phone = sender.phone if sender.phone else "No phone number"
    username = sender.username if sender.username else "None"
    first_name = sender.first_name if sender.first_name else "None"
    last_name = sender.last_name if sender.last_name else "None"
    link = f"https://t.me/{username}" if username != "None" else "No link"

    replied_users = load_replied_users()
    message_text = event.message.text.strip().lower() if event.message.text else ""

    if message_text == "!—Å—Ç–∞—Ä—Ç":
        remove_user_from_file(user_id)
        if os.path.exists(VIDEO_FILE):
            await client.send_file(
                chat_id,
                VIDEO_FILE,
                caption="üëπ **–ü—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –≤–æ–∏–Ω!** –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, "
                    "–∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –ø–æ–∫—É–ø–∫–∏ **Telegram Premium**. –ú—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –≤–∞—Å, "
                    "—Ç–∞–∫ —á—Ç–æ –ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—Ä–∞—Ç—å –¥—Ä—É–≥ —É –¥—Ä—É–≥–∞ –≤—Ä–µ–º—è.\n\n"
                    "–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥: `!–∏–Ω—Ñ–æ`, `!–¥–æ–Ω–∞—Ç`, `!–ø–æ–¥–∞—Ä–æ–∫`, `!–±–æ—Ç—ã –∞–≤—Ç–æ-–æ—Ç–≤–µ—Ç—á–∏–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å.\n\n"
                    "–¢–∞–∫–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç **–ê–Ω–¥—Ä–µ—è –ú—É—Ö–∞–º–µ–¥–∞** –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: https://muhamedlabs.pro"
            )
        else:
            await event.reply("–§–∞–π–ª –≤–∏–¥–µ–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ –º—ã –≥–æ—Ç–æ–≤—ã –≤–∞–º –ø–æ–º–æ—á—å!")

        save_replied_user(user_id, username, first_name, last_name, phone, chat_id, link)
        print(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω—ã: ID {user_id}, –¢–µ–ª–µ—Ñ–æ–Ω: {phone}, –ò–º—è: {first_name} {last_name}, Username: {username}")

    elif user_id not in replied_users:
        if os.path.exists(VIDEO_FILE):
            await client.send_file(
                chat_id,
                VIDEO_FILE,
                caption="üëπ **–ü—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –≤–æ–∏–Ω!** –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, "
                    "–∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –ø–æ–∫—É–ø–∫–∏ **Telegram Premium**. –ú—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –≤–∞—Å, "
                    "—Ç–∞–∫ —á—Ç–æ –ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—Ä–∞—Ç—å –¥—Ä—É–≥ —É –¥—Ä—É–≥–∞ –≤—Ä–µ–º—è.\n\n"
                    "–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥: `!–∏–Ω—Ñ–æ`, `!–¥–æ–Ω–∞—Ç`, `!–ø–æ–¥–∞—Ä–æ–∫`, `!–±–æ—Ç—ã –∞–≤—Ç–æ-–æ—Ç–≤–µ—Ç—á–∏–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å.\n\n"
                    "–¢–∞–∫–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç **–ê–Ω–¥—Ä–µ—è –ú—É—Ö–∞–º–µ–¥–∞** –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: https://muhamedlabs.pro"
            )
        else:
            await event.reply("–§–∞–π–ª –≤–∏–¥–µ–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ –º—ã –≥–æ—Ç–æ–≤—ã –≤–∞–º –ø–æ–º–æ—á—å!")

        save_replied_user(user_id, username, first_name, last_name, phone, chat_id, link)
        print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ID {user_id}, –¢–µ–ª–µ—Ñ–æ–Ω: {phone}, –ò–º—è: {first_name} {last_name}, Username: {username}")

    else:
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ID {user_id} –ø—Ä–æ–ø—É—â–µ–Ω–æ: —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message_text.startswith("!"):
        await handle_command(client, chat_id, message_text)

async def main():
    try:
        await client.start(phone=lambda: phone_number)
        if not await client.is_user_authorized():
            password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ")
            await client.start(password=password)
        print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return

    print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    await client.run_until_disconnected()

if __name__ == "__main__":
    client.loop.run_until_complete(main())
